using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using DataAccess.Models;

namespace VKR.Utils.ImageAnalyzis;

public class ImageAnalyzerStub : IImageAnalyzer
{
    private string runPythonScript()
    {
        //int number = 5;
        //ScriptEngine engine = Python.CreateEngine();

        //ICollection<string> searchPaths = engine.GetSearchPaths();
        //searchPaths.Add(@"Utils\ImageAnalyzis\venv\Lib");
        //engine.SetSearchPaths(searchPaths);

        //ScriptScope scope = engine.CreateScope();
        //engine.ExecuteFile("Utils\\ImageAnalyzis\\Test.py", scope);

        //int y = 22;
        //dynamic x = scope.GetVariable("x");
        //dynamic z = scope.GetVariable("z");
        //Console.WriteLine($"{x} + {y} = {z}");

        //dynamic square = scope.GetVariable("square");
        //// Вызываем функцию и получаем результат
        //dynamic result = square(number);

        ProcessStartInfo start = new ProcessStartInfo();
        start.FileName = @"C:\Users\Даня\AppData\Local\Programs\Python\Python37\python.exe";
        start.Arguments = @"Utils\ImageAnalyzis\Test.py";
        start.UseShellExecute = false;// Do not use OS shell
        start.CreateNoWindow = true; // We don't need new window
        start.RedirectStandardOutput = true;// Any output, generated by application will be redirected back
        start.RedirectStandardError = true; // Any error in standard output will be redirected back (for example exceptions)
        using (Process process = Process.Start(start))
        {
            using (StreamReader reader = process.StandardOutput)
            {
                string stderr = process.StandardError.ReadToEnd(); // Here are the exceptions from our Python script
                string result = reader.ReadToEnd(); // Here is the result of StdOut(for example: print "test")
                return result;
            }
        }
    }

    public Result analyze(string pathToOrig, User user, double precentOfSimilarity)
    {
        dynamic result = runPythonScript();
        //var tempOrigPath = new OriginalPath
        //{
        //    Path = pathToOrig,
        //};

        //var tempResPath = new ResultPath
        //{
        //    Init = tempOrigPath,
        //    Path = @"pack://application:,,,/resources/resImages/res.jpg",
        //};

        //var result = new Result
        //{
        //    Date = DateTime.Now.ToString(),
        //    User = user,
        //    AnRes = "Обнаружен фальсификат: Каррагинан.",
        //    OrigPath = tempOrigPath,
        //    ResPath = tempResPath,
        //};
        return result;
    }
}

